// ==UserScript==
// @name         debank_raffle_enjoyer
// @namespace    http://tampermonkey.net/
// @version      0.7.1
// @description  DeBank automatic raffles joiner!
// @author       Jokerank
// @match        *://*debank.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=debank.com
// @updateURL        https://raw.githubusercontent.com/Jokerank/debank_raffle_enjoyer/main/debank_raffle_enjoyer.js
// @downloadURL      https://raw.githubusercontent.com/Jokerank/debank_raffle_enjoyer/main/debank_raffle_enjoyer.js
// @supportURL       https://github.com/Jokerank/debank_raffle_enjoyer/issues
// @homepageURL      https://github.com/Jokerank/debank_raffle_enjoyer/
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    let success = 0
    let errors = 0

    // Function to execute the main script
    let switchForCustomPrice = true

    let state = false
    let switchForRandT = false
    let scrollSpeed = 3000
    let scrollSpeedStages = 1
    let delayStages = 1
    let rateLimitforScript = 3000
    let rateL = false

    // Style
    function updateStyle(element, textContent, color) {
        element.textContent = textContent
        element.style.backgroundColor = color
    }

    function updateSwitchState(element, switchStatus, name, arrayWithStatusONOFF) {
        if (switchStatus) {
            element.textContent = `${name} ${arrayWithStatusONOFF[0]}`
            element.style.backgroundColor = "#00c087";
        } else {
            element.textContent = `${name} ${arrayWithStatusONOFF[1]}`
            element.style.backgroundColor = "#f63d3d";
        }
    }

    function styleButtons(element, name, originalColor, width, height) {
        if (name != null || undefined) {
            element.textContent = name
        }
        if (originalColor != null || undefined) {
            element.style.backgroundColor = originalColor;
        }
        element.style.borderRadius = "10px";
        element.style.color = "white";
        element.style.fontSize = "11px";
        if (width != null || undefined) {
            element.style.width = width
        } else {
            element.style.width = "90px"
        }
        if (height != null || undefined) {
            element.style.height = height
        } else {
            element.style.height = "32px"
        }
    }
    // Style END
    
    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    async function requestListener() {
        // –ù–∏–∫—É–¥–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è, relax
        // –ü–æ –¥–µ—Ñ–æ–ª—Ç—É –≤—ã–∫–ª—é—á–µ–Ω - –ö–Ω–æ–ø–∫–∞ 429 Check
        // Alert —Ä–µ–π—Ç–ª–∏–º–∏—Ç–∞ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
        // –¢—É—Ç –º–æ–∂–Ω–æ –æ—á–µ–Ω—å –≥—Ä—è–∑–Ω—ã–µ —à—Ç—É–∫–∏ –¥–µ–ª–∞—Ç—å, –ø–æ —Ç–∏–ø—É —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ —Ä–µ–∫–≤–µ—Å—Ç–æ–≤, –ø—ã—Ç–∞–ª—Å—è –¥–µ–ª–∞—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Ç–æ–ª—å–∫–æ –ø–æ –≥–∏–≤–∞–º, –Ω–æ —ç—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –ø—Ä–æ–±–ª–µ–º–∞–º
        // –°–¥–µ–ª–∞–ª —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ª–µ–Ω—Ç—ã —Å –º–µ–π–Ω–∞ –Ω–∞ —Ç–≤–∏–Ω–∫, –≤—Å–µ —Ä–∞–±–æ—Ç–∞–ª–æ –∫—Ä–æ–º–µ –∫–æ–µ –∫–∞–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤, –≤ –æ–±—ä–µ–∫—Ç–µ –µ—Å—Ç—å is_following –∏ is_joined, —Ç.–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ª–µ–Ω—Ç–∞ —Å—Ä–∞–∑—É —Å
        // –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –µ—Å–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∏—Ö, —Å–∫—Ä–∏–ø—Ç –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è –∑–∞—Ñ–æ–ª–ª–æ–≤–∏—Ç—å—Å—è (–¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω) –∏–ª–∏ –∑–∞–π—Ç–∏ (–¥–∞–∂–µ –µ—Å–ª–∏ —É–∂–µ –∑–∞—à–µ–ª), –∏ –±—ã—Å—Ç—Ä–æ –ª–æ–≤–∏—Ç—å 429
        // –¢.–µ –Ω–∞–¥–æ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å –≤—Å—é –ª–æ–≥–∏–∫—É –∏ –∫–∞–∫ —Ç–æ –∑–∞–ø–∏–ª–∏–≤–∞—Ç—å –ø–æ–¥–≥—Ä—É–∑–∫—É, –ø—ã—Ç–∞–ª—Å—è –ø–æ–¥–º–µ–Ω–∏—Ç—å –ø–∞—Ä—É —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –Ω–æ —ç—Ç–æ –Ω–µ –ø—Ä–∏–≤–µ–ª–æ –∫ –ø–æ–¥–≥—Ä—É–∑–∫–µ –≥–∏–≤–æ–≤.
        // –ü–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞ –æ–Ω–ª–∏ –≥–∏–≤–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ ü´°

        // –ü—Ä–∏–º–µ—Ä –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:
        // let account = "—Ç—É—Ç –≤–∞—à –∞–∫–∫ random_id –∏ –ø—Ä–æ—á–∞—è —Ö—Ä–µ–Ω—å –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö –ø–æ—á—Ç–∏ –≤—Å–µ—Ö" // –ù–∞–π—Ç–∏ –º–æ–∂–Ω–æ –≤ F12 - Network - Headers - Request Headers - Account:
        // if (url.includes('https://api.debank.com/feed/list?limit=50&create_at=' && turn)) {
        //         // –¢—É—Ç –∏–¥–µ—Ç –ø–∞—Ä—Å —Ç–∞–π–º—à—Ç–∞–º–ø–∞ –∫–æ—Ç–æ—Ä—ã–π –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ
        //         let regex = /create_at=([\d.]+)/;
        //         let match = regex.exec(url);
        //         let extractedValue = match ? match[1] : null;
        // let address = "0x–í–∞—à–ê–¥—Ä–µ—Å"
        // // –¢—É—Ç –≤—Å—Ç–∞–≤–ª—è–µ–º —Ö–µ–¥–µ—Ä—Å—ã —Å–≤–æ–∏, –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∞–∫–∫–∞—É–Ω—Ç –±–µ—Ä–µ–º —Å–≤–µ—Ä—Ö—É, –∫–æ—Å—Ç—ã–ª—å–Ω—ã–π –æ–±—Ö–æ–¥ x-api –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        // let customHeaders = {
        //     "accept": "*/*",
        //     "accept-language": "",
        //     "account": account,
        //     "sec-ch-ua": "",
        //     "sec-ch-ua-mobile": "",
        //     "sec-ch-ua-platform": "",
        //     "sec-fetch-dest": "",
        //     "sec-fetch-mode": "",
        //     "sec-fetch-site": "",
        //     "source": "",
        // }
        //  // –†–µ–¥–∏—Ä–µ–∫—Ç –∞–¥—Ä–µ—Å–∞ –Ω–∞ –¥—Ä—É–≥–æ–π
        //         url = `https://api.debank.com/feed/list?limit=50&create_at=${extractedValue}&user_id=${address}`
        //         // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å –≤–∞—à–∏–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        //         const newHeaders = { ...options.headers, ...customHeaders };
        
        //         // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –æ–ø—Ü–∏–π –∑–∞–ø—Ä–æ—Å–∞ —Å –Ω–æ–≤—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        //         options = {
        //             ...options,
        //             headers: newHeaders,
        //         };
        
        //         const response = await originalFetch(url, options);
        //         const responseClone = await response.clone()
        //         let responseDataObject;
        //         try {
        //             responseDataObject = await responseClone.json();
        //         } catch (error) {
        //             // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON
        //             console.error('Error parsing JSON:', error);
        //             return response; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        //         }
        //         // console.log(responseDataObject);
        //         // –í–∞–∂–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–µ–Ω –≤ –∑–∞–ø—Ä–æ—Å–µ, —Å –Ω–∏–º –º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å –∫–∞–∫ –¥—É—à–µ —É–≥–æ–¥–Ω–æ, –≤—ã–≤–æ–¥–∏—Ç—å –æ–Ω–ª–∏ –≥–∏–≤—ã –∫–∞–∫ –∏ –ø–∏—Å–∞–ª, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å is_following, is_joined –∏ —Ç.–¥
        //         function modifyArray(responseDataObject) {
        //             return responseDataObject.data.feeds.map(item => {
        //             let modifiedItem = { ...item };
        //             // –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º "is_following" –∏ "is_joined"
        //             if (modifiedItem.article.draw_id != undefined || null) {
        //                 modifiedItem.article.creator.is_following = false
        //                 modifiedItem.article.draw.is_joined = false
        //             }
        //             return modifiedItem;
        //         })}
               
        //         modifyArray(responseDataObject);
               
        //         return new Response(JSON.stringify(responseDataObject), response);
        //     }
        // // –ï—Å–ª–∏ –ø—Ä–∏–¥—É–º–∞—é —á—Ç–æ-—Ç–æ, –∑–∞–ø–∏–ª—é –∞–ø–¥–µ–π—Ç, –Ω–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π ü•≤

        const originalFetch = window.fetch;
            window.fetch = async function (url, options) {
                const response = await originalFetch(url, options)

                if (rateL) {
                    // console.log(response.status)

                    if (response.status === 429) {
                            alert("You got a rate limit, maybe u need to edit some settings ü•≤ The script will be disabled ü´°")
                            state = false
                            styleButtons(button, "Run DeBank Enjoyer ü´°", "#4CAF50", "180px", "32px")
                    }

                    return response
                } else {
                    return response
                }
            }
            return originalFetch(url, options);
    }

    function runMainScript() {
        if(state) {

            let howMuchSeen = 0
            let arrayChecker = []

            async function endChecker() {
                    let arrayWithIndexes = []

                    let list = document.getElementsByClassName("ListContainer_streamListWrap__3w26c ListContainer_isVisible__13Ye8")[0]
                    let elementsWithIndex = list.querySelectorAll('div[data-index]');
                    
                    elementsWithIndex.forEach((element) => {
                    let dataIndexValue = element.dataset.index;
                        arrayWithIndexes.push(dataIndexValue)
                    });

                    if (arrayChecker.toString() === arrayWithIndexes.toString()) {
                        arrayChecker = arrayWithIndexes.slice();
                        ++howMuchSeen;
                    } else {
                        arrayChecker = arrayWithIndexes.slice();
                        howMuchSeen = 0
                    } // howMuchSeen 5 —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–π –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –Ω–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø–æ—Å–ª–µ 3—Ö –ø–æ—Å—Ç–∞–≤–∏–ª 5 –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
                    if (howMuchSeen >= 5) {
                        alert("Looks like posts for today are over.")
                        state = false
                        styleButtons(button, "Run DeBank Enjoyer ü´°", "#4CAF50", "180px", "32px")
                        howMuchSeen = 0
                    }
            }

            let joinTheDraw = "Button_button__1yaWD Button_is_primary__1b4PX RichTextView_joinBtn__3dHYH" // –ú–∞—Å—Å–∏–≤
            let follow = "Button_button__1yaWD Button_is_primary__1b4PX FollowButton_followBtn__DtOgj JoinDrawModal_joinStepBtn__DAjP0"
            let repost = "Button_button__1yaWD Button_is_primary__1b4PX JoinDrawModal_joinStepBtn__DAjP0"
            let following = "FollowButton_follwing__2itpB"
            let reposted = "Button_button__1yaWD Button_is_gray__3nV7y Button_is_disabled__18BCT JoinDrawModal_joinStepBtn__DAjP0 JoinDrawModal_isSuccess__1EVms" // –¢—É—Ç –¥–≤–∞ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω
            let successTitle = "JoinDrawModal_drawSuccessTitle__2bnFS" // –ß–µ–∫ –Ω–∞ —Å–∞–∫—Å–µ—Å—Å
            let drawToken = "JoinDrawModal_tokenDesc__1PIxe" // –ù–æ–º–µ—Ä —Ç–æ–∫–µ–Ω–∞
            let joinTheLuckyDraw = "Button_button__1yaWD Button_is_primary__1b4PX JoinDrawModal_submitBtn__RJXvp" // Join The Lucky Draw
            let closeButton = "CommonModal_closeModalButton__1swng" // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
            let qualified = "InteractPermissions_inValidTag__2UemM" // class changed
            let prizeTitle = "RichTextView_prizeTitle__5wXAk"
            let FollowingLimitReached = "FollowLimitModal_container__MJWF8"

            let notifyOnlyOnce = 0
            async function startTask(element, index) {
                let postTYPE
                let thickDesc
                try {
                    postTYPE = element.getElementsByClassName(prizeTitle)[0].outerText
                    thickDesc = element.getElementsByClassName("RichTextView_thickDesc__XyL5G")[0].outerText
                } catch (error) {
                    
                }
                
                let buttonElement = element.querySelector('button');
                let trustButton = element.getElementsByClassName("ArticleContent_opIconWrap__3YjdX")[3]
                let repostButton = element.getElementsByClassName("ArticleContent_opIconWrap__3YjdX")[1]

                let skip = false
                
                // // –°–æ–º–Ω–∏—Ç–µ–ª—å–Ω–∞—è —à—Ç—É–∫–∞ —Ç.–∫ –∏–Ω–æ–≥–¥–∞ –ø–æ—Å—Ç—ã –≤–Ω–∏–∑—É –≤—ã–ª–∞–∑—è—Ç, —Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–æ–≤—ã–µ, –µ—Å–ª–∏ –∫—Ç–æ —á–∏—Ç–∞–µ—Ç –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Å—Ç–∏—Ç—å –∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ 'Sorry, you did not get the prize'
                // // –ü–æ –ª–æ–≥–∏–∫–µ —ç—Ç–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ç–∞—Ä—ã–µ –ø–æ—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –ª–∏—Å—Ç–∞—Ç—å
                // // –í—ã–¥–µ–ª–∏—Ç—å –≤–µ—Å—å –±–ª–æ–∫ + –Ω–∞–∂–∞—Ç—å CTRL+ /
                // if (postTYPE == 'CASH PRIZE' && thickDesc == 'Sorry, you did not get the prize') {
                //     if (notifyOnlyOnce == 0) {
                //         alert("Looks like posts for today are over.")
                //         ++notifyOnlyOnce
                //     }
                //     skip = true
                //     state = false
                //     styleButtons(button, "Run DeBank Enjoyer ü´°", "#4CAF50", "180px", "32px")
                // }
                // else if (!buttonElement) {

                if (!buttonElement) { // –ò —Ç—É—Ç –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É
                    skip = true
                } else {
                    if (!switchForCustomPrice) {
                        skip = false
                    } else {
                        if (postTYPE == 'CUSTOM PRIZE' && switchForCustomPrice) {
                            skip = true
                        } else if (postTYPE === undefined || null) {
                            skip = true
                        }
                    }
                }
                if (!skip && state) {
                    await delay(200)
                    buttonElement.click()
                    await delay(2000)
                    let qualifiedORnot = document.getElementsByClassName(qualified).length
                    if (qualifiedORnot > 0) {
                        console.log(`Task - ${index} does not meet the conditions, exit!`)
                        ++errors
                        document.getElementsByClassName(closeButton)[0].click()
                        delayBetweenTasks = 0
                    } else {
                        if(switchForRandT) {
                            if (!repostButton.innerHTML.includes("var(--color-primary)")) { repostButton.click() }
                            if (!trustButton.innerHTML.includes("green")) { trustButton.click() }
                        }
                        try {
                            let followON = document.getElementsByClassName(follow)
                            for (let buttons of followON) {
                                let limitElement
                                if (state) {
                                    buttons.click()
                                    limitElement = document.getElementsByClassName(FollowingLimitReached)[0]
                                }

                                if (limitElement.innerHTML.includes('reached the maximum limit')) {
                                    if (notifyOnlyOnce == 0) {
                                        alert("Following limit reached, clean up your friendlist üòé‚òùÔ∏è")
                                        button.click()
                                        ++notifyOnlyOnce
                                    }
                                    state = false
                                    break
                                }
                            }
                        } catch (err) {
                            console.log("Seems already pressed")
                            console.log(err)
                        }
                        try {
                            let repostON = document.getElementsByClassName(repost)
                            for (let buttons of repostON) {
                                buttons.click()
                            }
                        } catch (err) {
                            console.log("Seems already pressed")
                            console.log(err)
                        }

                        let interval = setInterval(() => {
                            let join = document.getElementsByClassName(joinTheLuckyDraw)
                            if (join.length == 1) {
                                join[0].click()
                            }
                            let congrats = document.getElementsByClassName(successTitle)
                            if (congrats.length == 1) {
                                try {
                                    let close = document.getElementsByClassName(closeButton)
                                    close[0].click()
                                    clearInterval(interval)
                                    ++success
                                } catch (err) {
                                    console.log(err)
                                    ++errors
                                }
                            }
                        }, 1000);
                    }
                    if (qualifiedORnot > 0) {
                        delayBetweenTasks = 0
                    } else {
                        delayBetweenTasks = rateLimitforScript
                    }
                    } else {
                        delayBetweenTasks = 0
                        console.log(`Skipped because of custom prize or because already registered - task: ${index}`)
                    }
            }


            function simulateScroll(callback) {
                // Specify the coordinates where you want to scroll to (in this example, scrolling to the Y-coordinate 1000)
                const scrollToY = callback;
                // Scroll the page to the specified coordinates
                window.scrollBy({
                    top: scrollToY,
                    behavior: 'smooth' // Use 'auto' for instant scrolling, or 'smooth' for smooth scrolling
                });
            }
            
            let delayBetweenTasks = rateLimitforScript

            async function main() {
                if (state) {
                    styleButtons(button, "Running DeBank Enjoyer ü´°", "#ef7c39", "180px", "32px")
                }
                
                let visibleFeed = document.getElementsByClassName("ListContainer_streamListWrap__3w26c ListContainer_isVisible__13Ye8")[0] // devs again changed something
                let feedListItem = visibleFeed.getElementsByClassName("ArticleContent_articleMain__2EFKB FeedListItem_content__2XFtk")
                
                if (feedListItem.length != 0 && state) {
                    console.log(`Loaded ${feedListItem.length} post/s`)

                    let index = 0

                    for (let element of feedListItem) {
                        await startTask(element, index)
                        await delay(delayBetweenTasks)
                        console.log(delayBetweenTasks)
                        console.log(`Task done ${index}!`)
                        ++index
                    }
                } else {
                    console.log("Scrolling to find more raffles")
                    await delay(500)
                }
                if (state) {
                    simulateScroll(scrollSpeed)
                    endChecker()
                    await delay(1000)
                    main()
                }
            }
            if (state) {
                 main()
            }
        }
    }

    // Create the button element
    const button = document.createElement("button");
    function runButtonDefault() {
        styleButtons(button, "Run DeBank Enjoyer ü´°", "#4CAF50", "180px", "32px")
        button.style.position = "fixed";
        button.style.zIndex = "9999"; // Set the z-index to make sure the button appears on top
    }
    runButtonDefault()

    // Set the button's click event to run the main script
    button.addEventListener("click", function(){
        switch (state) {
            case false:
                state = true
                runMainScript()
                break;
            case true:
                state = false
                runButtonDefault()
                break;
            default:
                break;
        }
    });

    const statisticsElement = document.createElement("div");
    statisticsElement.appendChild(button);
    const elmwithstatistic = document.createElement("div");
    statisticsElement.appendChild(elmwithstatistic);

    function updateStatisticsText() {
        elmwithstatistic.textContent = `\n\nStats:\nJoin in: ${success} raffles\nErrors: ${errors}\n`;
    }
    
    // Create the hyperlink element
    const debank = document.createElement("a");
    debank.href = "https://debank.com/profile/0xf890da5ab205741ebc49691eacfe127cffd90599/";
    debank.textContent = "DeBank ‚ù§Ô∏è | ";

    statisticsElement.appendChild(document.createElement("br"));
    statisticsElement.appendChild(debank);

    const github = document.createElement("a");
    github.href = "https://github.com/Jokerank";
    github.textContent = "Github ‚ù§Ô∏è";

    statisticsElement.appendChild(github);

    const telegram = document.createElement("a");
    telegram.href = "https://t.me/investjk";
    telegram.textContent = "Telegram ‚ù§Ô∏è\n";

    statisticsElement.appendChild(document.createElement("br"));
    statisticsElement.appendChild(telegram);

    const switchButton = document.createElement("button");  

    statisticsElement.appendChild(document.createElement("br"));
    statisticsElement.appendChild(switchButton);

    styleButtons(switchButton, "Skip Custom Price ON üëå", "#00c087", "180px", "32px")

    switchButton.addEventListener("click", function() {
            switch (switchForCustomPrice) {
                case true:
                    switchForCustomPrice = false
                    updateStyle(switchButton, `Skip Custom Price OFF ü•¥`, "#fe815f")
                    break;
                case false:
                    switchForCustomPrice = true
                    updateStyle(switchButton, `Skip Custom Price ON üëå`, "#00c087")
                    break;
                default:
                    break;
            }
    })

        async function followORunfollow(mode) {
        
            let htmlCode = document.getElementsByClassName("FollowButton_followBtnIcon__cZE9v")
            if (htmlCode.length != 0) {
                for (let element of htmlCode) {
                    await otpiskaNahuyORpodpiska(element, mode)
                }
            } else {
                alert("Make sure you are on following or followers page")
            }
        
            async function otpiskaNahuyORpodpiska(element, mode) {
                try {                
                    let svgElement = element.querySelector('g');
                    let followORnot = svgElement.getAttribute("clip-path")
                    
                    if (mode == "Unfollow") {
                        if (followORnot == "url(#clip0_11356_89186)") {
                            console.log("Already Unfollowed")
                        } else {
                            console.log("Unfollowed")
                            await delay(200)
                            element.click()
                        }
                    }
                    if (mode == "Follow") {
                        if (followORnot == "url(#clip0_11356_89186)") {
                            console.log("Followed")
                            await delay(200)
                            element.click()
                        } else {
                            console.log("Already Followed")
                        }
                    }
                } catch (err) {
                    console.log(err) 
                }
            }
        }

        const friendsRemover = document.createElement("button");
        statisticsElement.appendChild(document.createElement("br"));
        statisticsElement.appendChild(friendsRemover);

        styleButtons(friendsRemover, `Bulk Unfollow`, "#fe815f")

        friendsRemover.addEventListener("click", function() {
            followORunfollow("Unfollow");
        })

        const friendsAdd = document.createElement("button");
        statisticsElement.appendChild(friendsAdd);

        styleButtons(friendsAdd, `Bulk Follow`, "#fe815f")

        friendsAdd.addEventListener("click", function() {
            followORunfollow("Follow");
        })
        
        const repostANDtrust = document.createElement("button");
        statisticsElement.appendChild(document.createElement("br"));
        statisticsElement.appendChild(repostANDtrust);
        
        updateSwitchState(repostANDtrust, switchForRandT, "R&T", ["ON", "OFF"])
        styleButtons(repostANDtrust, null, null)

        repostANDtrust.addEventListener("click", function() {
            switch (switchForRandT) {
                case true:
                    switchForRandT = false
                    updateSwitchState(repostANDtrust, switchForRandT, "R&T", ["ON", "OFF"])
                    break;
                case false:
                    switchForRandT = true
                    updateSwitchState(repostANDtrust, switchForRandT, "R&T", ["ON", "OFF"])
                    break;
                default:
                    break;
            }
        })
        
        const scrollSpeedButton = document.createElement("button");
        statisticsElement.appendChild(scrollSpeedButton);

        styleButtons(scrollSpeedButton, `Scroll Speed üòé`, "#00c087")

        scrollSpeedButton.addEventListener("click", function() {
            switch (scrollSpeedStages) {
                case 1:
                    scrollSpeed = 2000
                    scrollSpeedStages = 2
                    updateStyle(scrollSpeedButton, `Scroll Speed ü§®`, "#d66853")                    
                    break;
                case 2:
                    scrollSpeed = 1000
                    scrollSpeedStages = 3
                    updateStyle(scrollSpeedButton, `Scroll Speed üê¢`, "#bf8b32")
                    break;
                case 3:
                    scrollSpeed = 3000
                    scrollSpeedStages = 1
                    updateStyle(scrollSpeedButton, `Scroll Speed üòé`, "#00c087")
                    break;
                default:
                    break;
            }
        })

        const rateLimitButton = document.createElement("button");
        statisticsElement.appendChild(document.createElement("br"));
        statisticsElement.appendChild(rateLimitButton);

        styleButtons(rateLimitButton, `Delay Task OFF`, "#fe815f")

        rateLimitButton.addEventListener("click", function() {
            switch (delayStages) {
                case 1:
                    rateLimitforScript = 10000
                    delayStages = 2
                    updateStyle(rateLimitButton, `Delay Task üê¢`, "#f63d3d")
                    break;
                case 2:
                    rateLimitforScript = 6000
                    delayStages = 3
                    updateStyle(rateLimitButton, `Delay Task üòà`, "#00c087")
                    break;
                case 3:
                    rateLimitforScript = 15000
                    delayStages = 4
                    updateStyle(rateLimitButton, `Sloth mode ü¶•`, "#5F5F5F")
                    break;
                case 4:
                    rateLimitforScript = 3000
                    delayStages = 1
                    updateStyle(rateLimitButton, `Delay Task OFF`, "#fe815f")
                    break;
                default:
                    break;
            }
        })

        const RateLimitChecker = document.createElement("button");
        statisticsElement.appendChild(RateLimitChecker);

        updateSwitchState(RateLimitChecker, rateL, "429 Check", ["üîî", "üîï"])
        styleButtons(RateLimitChecker, null, null)

        RateLimitChecker.addEventListener("click", function() {
            switch (rateL) {
                case false:
                    rateL = true
                    updateSwitchState(RateLimitChecker, rateL, "429 Check", ["üîî", "üîï"])
                    requestListener()
                    break;
                case true:
                    rateL = false
                    updateSwitchState(RateLimitChecker, rateL, "429 Check", ["üîî", "üîï"])
                    break;
                default:
                    break;
            }
        })
    
        
    setInterval(() => {
        updateStatisticsText()
    }, 500);

    statisticsElement.style.whiteSpace = "pre-wrap";
    statisticsElement.style.position = "fixed";
    statisticsElement.style.bottom = "210px";
    statisticsElement.style.left = "10px";
    statisticsElement.style.backgroundColor = "rgba(0, 0, 0, 0.3)";
    statisticsElement.style.borderRadius = "10px";
    statisticsElement.style.color = "white";
    statisticsElement.style.padding = "10px";
    statisticsElement.style.fontSize = "16px";
    statisticsElement.style.zIndex = "9999"; // Set the z-index to make sure the text appears on top

    // Append the statistics element to the page
    document.body.appendChild(statisticsElement);
})();
